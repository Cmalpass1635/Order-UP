@model OrderUp.Models.CUSTOMERORDER

@{
    ViewBag.Title = "EditOrder";
    var items = (List<OrderUp.Models.ORDERITEM>)ViewBag.OrderItems;
}

<h2>EditOrder</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    

    <div class="form-horizontal">
        <h4>CUSTOMERORDER</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrderID)
        
        <div class="form-group">
            @Html.LabelFor(model => model.ServerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ServerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.DiscountName, (SelectList)@ViewBag.Discount, new {@onchange = "this.form.submit();"})
               @Html.ValidationMessageFor(model => model.DiscountName, "", new { @class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subtotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Subtotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subtotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.DiscountAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiscountAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pretax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Pretax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pretax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
<p>
    @Html.ActionLink("Add Item", "AddItem", new { orderid = Model.OrderID })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.OrderID)
        </th>
        <th>
            Menu Item
        </th>
        <th>
            Price
        </th>
        <th></th>
    </tr>

    @foreach (var item in items)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FoodName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FoodPrice)
            </td>
            <td>
                @Html.ActionLink("Delete", "DeleteItem", new { detailid = item.DetailID })
            </td>
        </tr>
    }

</table>

<div>
    @Html.ActionLink("Submit", "SubmitOrder", new { orderid = Model.OrderID })
    <br>
    @Html.ActionLink("Back to List", "Customerorder")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
